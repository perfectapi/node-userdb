{	"exports": "userdb",
	"signature": [
		{ 
			"name": "addUser",
			"synopsis": "Adds a new user account",
			"description": "",
			"verb": "POST",
			"parameter": {"name": "email", "required":"true"},
			"options": 
				[{"option": "name", "required":"false", "description":"the name of the entity represented by this user account"},
				{"option": "groupName", "required":"true", "description":"the name of the primary group in which the user account belongs"},
				{"option": "password", "required":"false", "description":"the initial password for the user"}
				],
			"returns": 
				[{"name":"password", "description":"Initial password for the new user"}
				],
			"environment": [{"parameter": "SECURE_TOKEN", "required":"false"}]
		},
		{ 
			"name": "removeUser",
			"synopsis": "Removes an existing user",
			"description": "",
			"verb": "POST",
			"parameter": {"name": "email", "required":"true"},
			"environment": [{"parameter": "SECURE_TOKEN", "required":"true"}]
		},
		{ 
			"name": "login",
			"synopsis": "Standard username + password login",
			"description": "",
			"verb": "POST",
			"parameter": {"name": "email", "required":"true"},
			"options": 
				[{"option": "password", "required":"true", "description":"the password for the user"}
				],
			"returns": 
				[{"name":"SECURE_TOKEN", "description":"SECURE_TOKEN to be used in future actions"},
				 {"name":"firstLogin", "description":"true or false flag indicating if this is the first time the user has logged in"},
				 {"name":"changedInitialPassword", "description":"true or false flag indicating if this user has changed their initial password"}
				]
		},
		{ 
			"name": "changePassword",
			"synopsis": "Change password action initiated by the user",
			"description": "",
			"verb": "POST",
			"options": 
				[{"option": "oldPassword", "required":"true", "description":"the current (old) password for the user"},
				 {"option": "newPassword", "required":"true", "description":"the new password for the user"}
				],
			"environment": [{"parameter": "SECURE_TOKEN", "required":"true"}]
		},
		{ 
			"name": "registerOauth2Client",
			"synopsis": "Register a client (application) for use with OAUTH 2.0",
			"description": "",
			"verb": "POST",
			"parameter": {"name": "name", "required":"true", "description":"the name of the application, unique for this user"},
			"options": 
				[{"option": "clientType", "required":"true", "description":"the type of client, either public (most apps) or confidential (traditional web app like PHP, ASP.NET, RoR)"},
				 {"option": "redirectEndpoint", "required":"true", "description":"the redirection endpoint, i.e. where to send the browser after authentication"}
				],
			"returns": 
				[{"name":"CLIENT_ID", "description":"CLIENT_ID to be used by the OAUTH 2.0 process"},
				 {"name":"CLIENT_SECRET", "description":"for confidential client types only, CLIENT_SECRET to be used by the OAUTH 2.0 process"}
				],
			"environment": [{"parameter": "SECURE_TOKEN", "required":"true"}]
		},
		{ 
			"name": "unregisterOauth2Client",
			"synopsis": "Un-register a client (application) for use with OAUTH 2.0",
			"description": "",
			"verb": "POST",
			"parameter": {"name": "name", "required":"true", "description":"the name of the application, unique for this user"},
			"environment": [{"parameter": "SECURE_TOKEN", "required":"true"}]
		},
		{ 
			"name": "listOAuth2Clients",
			"synopsis": "List the registered OAuth2 clients (applications) for the current user",
			"description": "",
			"verb": "POST",
			"environment": [{"parameter": "SECURE_TOKEN", "required":"true"}],
			"returns": 
				[{"name":"name", "description":"the unique (for this user) name of the client"},
				 {"name":"clientType", "description":"the type of client, either public (most apps) or confidential (traditional web app like PHP, ASP.NET, RoR)"},
				 {"name":"redirectEndpoint", "description":"the redirection endpoint, i.e. where to send the browser after authentication"},
				 {"name":"CLIENT_ID", "description":"CLIENT_ID to be used by the OAUTH 2.0 process"},
				 {"name":"CLIENT_SECRET", "description":"for confidential client types only, CLIENT_SECRET to be used by the OAUTH 2.0 process"}
				]
		},
		{ 
			"name": "getAuthorizationCode",
			"synopsis": "Get an OAUTH 2.0 authorization code, valid for a single use within 10 minutes",
			"description": "",
			"verb": "POST",
			"parameter": {"name": "scope", "required":"false", "type":"multi", "description":"OAUTH2 scope (permissions) to grant"},
			"options": 
				[{"option": "clientId", "required":"true", "description":"the client id that is requesting the code"}
				],
			"environment": [{"parameter": "SECURE_TOKEN", "required":"true"}],
			"returns": 
				[{"name":"code", "description":"the requested code"},
				 {"name":"redirectEndpoint", "description":"the client-registered redirection endpoint, i.e. where to send the browser after authentication"}
				]
		},
		{ 
			"name": "getPublicAccessToken",
			"synopsis": "Get an OAUTH 2.0 access token for a public client type, valid for 30 minutes",
			"description": "",
			"verb": "POST",
			"parameter": {"name": "code", "required":"true", "description":"OAUTH2 code retrieved using getAuthorizationCode"},
			"returns": 
				[{"name":"token", "description":"the requested token"},
				 {"name":"refreshToken", "description":"an OAuth2 refresh token"},
				 {"name":"expiresIn", "description":"The lifetime in seconds of the access token"},
				 {"name":"redirectEndpoint", "description":"the client-registered redirection endpoint, i.e. where to send the browser after authentication"}
				]
		},
		{ 
			"name": "getConfidentialAccessToken",
			"synopsis": "Get an OAUTH 2.0 access token for a confidential client type, valid for 30 minutes",
			"description": "",
			"verb": "POST",
			"parameter": {"name": "code", "required":"true", "description":"OAUTH2 code retrieved using getAuthorizationCode"},
			"environment": [{"parameter": "CLIENT_SECRET", "required":"true", "description":"Client secret for the registered client"},
				{"parameter": "CLIENT_ID", "required":"true", "description":"Client id for the registered client"}],
			"returns": 
				[{"name":"token", "description":"the requested token"},
				 {"name":"refreshToken", "description":"an OAuth2 refresh token"},
				 {"name":"expiresIn", "description":"The lifetime in seconds of the access token"},
				 {"name":"redirectEndpoint", "description":"the client-registered redirection endpoint, i.e. where to send the browser after authentication"}
				]
		},
		{ 
			"name": "getPublicRefreshedAccessToken",
			"synopsis": "Get a new OAUTH 2.0 access token using a refresh token",
			"description": "",
			"verb": "POST",
			"parameter": {"name": "refreshToken", "required":"true", "description":"OAUTH2 refresh token"},
			"returns": 
				[{"name":"token", "description":"a new token"},
				 {"name":"refreshToken", "description":"a new OAuth2 refresh token"},
				 {"name":"expiresIn", "description":"The lifetime in seconds of the access token"}
				]
		},
		{ 
			"name": "getConfidentialRefreshedAccessToken",
			"synopsis": "Get a new OAUTH 2.0 access token using a refresh token",
			"description": "",
			"verb": "POST",
			"parameter": {"name": "refreshToken", "required":"true", "description":"OAUTH2 refresh token"},
			"environment": [{"parameter": "CLIENT_SECRET", "required":"true", "description":"Client secret for the registered client"},
				{"parameter": "CLIENT_ID", "required":"true", "description":"Client id for the registered client"}],
			"returns": 
				[{"name":"token", "description":"a new token"},
				 {"name":"refreshToken", "description":"a new OAuth2 refresh token"},
				 {"name":"expiresIn", "description":"The lifetime in seconds of the access token"}
				]
		},
		{ 
			"name": "getGrantedScope",
			"synopsis": "Returns the scope that was granted to a particular access token",
			"description": "Returns the scope that was granted to a particular access token. Will return an error if the access token is invalid or has no access.",
			"verb": "GET",
			"parameter": {"name": "accessToken", "required":"true", "description":"OAUTH2 access token"},
			"returns": 
				[{"name":"scope", "description":"an array of the granted scope"}
				]
		}
		
	], 
	"path": "userdb"
}